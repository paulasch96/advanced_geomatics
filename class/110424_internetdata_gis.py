import requests  #contains a way of getting stuff from the internet

placeName = "Attersee"
 
urlString = "https://nominatim.openstreetmap.org/search?"
urlString += f"q={placeName}"  #q is free form query to search for, defined on nominatim api
urlString += "&format=geojson" #json is a format that represents a very complex dict
urlString += "&polygon_geojson=1"
urlString += "&limit=1"

print(urlString) #brows for the url and see what it shows
#data was copied from the data = response.json() output
data = {'type': 'FeatureCollection', 'licence': 'Data © OpenStreetMap contributors, ODbL 1.0. http://osm.org/copyright', 'features': [{'type': 'Feature', 'properties': {'place_id': 57517153, 'osm_type': 'relation', 'osm_id': 103018, 'place_rank': 16, 'category': 'boundary', 'type': 'administrative', 'importance': 0.40726693359187427, 'addresstype': 'village', 'name': 'Attersee am Attersee', 'display_name': 'Attersee am Attersee, Bezirk Vöcklabruck, Oberösterreich, 4864, Österreich'}, 'bbox': [13.492858, 47.8871434, 13.5630445, 47.9281485], 'geometry': {'type': 'Polygon', 'coordinates': [[[13.492858, 47.8916965], [13.4932871, 47.8915248], [13.4936844, 47.891375], [13.4939594, 47.8913645], [13.4941555, 47.8913903], [13.4946065, 47.891358], [13.4949717, 47.8911248], [13.4951307, 47.8909858], [13.495558, 47.8907912], [13.4956974, 47.8907115], [13.4959703, 47.890666], [13.4961767, 47.89071], [13.496541, 47.8907197], [13.4970816, 47.8905949], [13.4977797, 47.8903708], [13.4980613, 47.8902766], [13.4983375, 47.8901813], [13.4990548, 47.8900605], [13.4997994, 47.8899082], [13.500268, 47.8896227], [13.5008436, 47.8894823], [13.5011746, 47.8892152], [13.5016423, 47.8891816], [13.5019563, 47.8892258], [13.50239, 47.8889178], [13.5026912, 47.8887311], [13.5031155, 47.8887244], [13.5035781, 47.8886046], [13.5038504, 47.8883705], [13.5042362, 47.8879957], [13.5045153, 47.8878642], [13.5047615, 47.8876204], [13.5051669, 47.887452], [13.50543, 47.8872771], [13.5060695, 47.8872404], [13.5061986, 47.8874303], [13.5066439, 47.8875764], [13.507286, 47.8871434], [13.5078444, 47.8872379], [13.5079979, 47.8873207], [13.5080819, 47.8872909], [13.5083541, 47.8873004], [13.5085663, 47.8873475], [13.508686, 47.887389], [13.5087548, 47.8874495], [13.5089841, 47.8874784], [13.5099866, 47.8876847], [13.5099438, 47.8877393], [13.510028, 47.8878002], [13.5101497, 47.8878914], [13.5102282, 47.888009], [13.5103003, 47.8881843], [13.51026, 47.8882694], [13.511203, 47.8884883], [13.5117732, 47.8888823], [13.5126396, 47.8894827], [13.5129927, 47.8896336], [13.5134445, 47.8897837], [13.5141387, 47.8899266], [13.5144718, 47.8899962], [13.5148776, 47.8900456], [13.5151351, 47.8900496], [13.5153272, 47.8900121], [13.5156423, 47.8900489], [13.5160173, 47.8900618], [13.5160737, 47.8901202], [13.516227, 47.8902256], [13.5163442, 47.8902314], [13.5164038, 47.890254], [13.5165925, 47.8902918], [13.5171438, 47.8904291], [13.5177838, 47.8905337], [13.5183354, 47.8906317], [13.5186655, 47.8907992], [13.5186883, 47.8909157], [13.5187449, 47.8909368], [13.5188735, 47.890915], [13.519007, 47.8910539], [13.5193437, 47.8912336], [13.5194053, 47.8913762], [13.5195159, 47.8914183], [13.5197888, 47.8916631], [13.5199294, 47.8918215], [13.5197937, 47.8919474], [13.5198304, 47.8921347], [13.5198047, 47.8922525], [13.519975, 47.8923243], [13.5201312, 47.8926049], [13.5202594, 47.8927441], [13.5204542, 47.8928701], [13.5207312, 47.8929405], [13.520919, 47.8929315], [13.5211953, 47.8927625], [13.5214501, 47.8926941], [13.5215144, 47.8926923], [13.5215761, 47.8926905], [13.5216834, 47.8926977], [13.5224264, 47.8925826], [13.5225203, 47.8926635], [13.5227456, 47.8925988], [13.5229897, 47.8924729], [13.5232552, 47.8924333], [13.5233544, 47.8924207], [13.5234993, 47.8924297], [13.5236897, 47.892383], [13.5238387, 47.892364], [13.5239018, 47.8923025], [13.5239231, 47.8922733], [13.5239428, 47.8922571], [13.5240472, 47.8922437], [13.5241759, 47.8922573], [13.5242497, 47.8922469], [13.5243788, 47.8921953], [13.5244583, 47.8921825], [13.5245432, 47.8921603], [13.5246304, 47.89215], [13.5246841, 47.8921583], [13.5247136, 47.8921673], [13.5247151, 47.8921753], [13.5246284, 47.8921631], [13.5245561, 47.8921732], [13.5246061, 47.8922377], [13.525369, 47.8922529], [13.5253546, 47.8922777], [13.5254678, 47.8922774], [13.5255237, 47.8923705], [13.5268429, 47.8924408], [13.5279515, 47.8925449], [13.5302223, 47.8927589], [13.5302622, 47.892481], [13.5381443, 47.892477], [13.5423336, 47.8924683], [13.5514045, 47.8924645], [13.5513882, 47.896195], [13.547685, 47.907822], [13.5569511, 47.9143171], [13.5630445, 47.9229666], [13.5534834, 47.923398], [13.5494231, 47.9235804], [13.5465223, 47.9237061], [13.5455723, 47.923747], [13.5450154, 47.9237215], [13.5446568, 47.9238019], [13.5434807, 47.9237993], [13.5427578, 47.9239514], [13.5421197, 47.9240141], [13.5414583, 47.9241186], [13.5405485, 47.9240224], [13.5402904, 47.924482], [13.5399367, 47.9247327], [13.5394421, 47.9248512], [13.5391706, 47.925005], [13.5382927, 47.9252956], [13.5378818, 47.9254786], [13.5374291, 47.9255703], [13.5364611, 47.9258954], [13.5360602, 47.9260453], [13.5355388, 47.9260741], [13.534709, 47.9261749], [13.5342718, 47.9261075], [13.5339615, 47.9259524], [13.5332564, 47.9260184], [13.5326738, 47.9260396], [13.532513, 47.9260374], [13.5324425, 47.9257572], [13.5319885, 47.9257132], [13.5314786, 47.9259634], [13.5306595, 47.9263587], [13.5299815, 47.9266408], [13.5291142, 47.9265125], [13.5284124, 47.9266185], [13.5278057, 47.9266222], [13.5274071, 47.9266684], [13.527165, 47.926802], [13.5266104, 47.9269578], [13.526203, 47.926917], [13.525495, 47.9269], [13.524675, 47.926977], [13.523938, 47.927207], [13.5233735, 47.927393], [13.5225292, 47.9274555], [13.5218275, 47.9273602], [13.5213091, 47.9273645], [13.5207587, 47.9273196], [13.5205882, 47.9271837], [13.5201983, 47.9270026], [13.519862, 47.9269118], [13.519247, 47.926847], [13.5187578, 47.9267467], [13.5181137, 47.9267031], [13.5179339, 47.9265709], [13.517562, 47.9267161], [13.5170059, 47.9268856], [13.5162241, 47.9271289], [13.5156159, 47.9274511], [13.5149997, 47.9277535], [13.5145901, 47.9278684], [13.514085, 47.9279989], [13.5137087, 47.928115], [13.5136053, 47.9281485], [13.513407, 47.927905], [13.5127934, 47.928106], [13.512306, 47.927515], [13.512272, 47.927473], [13.51224, 47.927587], [13.512116, 47.927821], [13.511998, 47.927997], [13.511946, 47.928083], [13.511765, 47.92772], [13.511628, 47.927541], [13.511269, 47.927111], [13.511098, 47.926813], [13.511049, 47.926582], [13.5110061, 47.9265046], [13.5102217, 47.9266215], [13.509939, 47.925784], [13.5098541, 47.9255306], [13.509519, 47.9255901], [13.5091316, 47.9257179], [13.5088236, 47.9258099], [13.508747, 47.92567], [13.5087049, 47.9256144], [13.5085836, 47.9252931], [13.5088169, 47.9252908], [13.5088879, 47.9253068], [13.5088386, 47.9252562], [13.5088136, 47.9251894], [13.5086709, 47.9248764], [13.5085518, 47.9246358], [13.5084898, 47.9245384], [13.5089681, 47.9245178], [13.5092083, 47.9245054], [13.5094608, 47.9244833], [13.5099494, 47.9243855], [13.5098569, 47.9242298], [13.5097719, 47.9241068], [13.5097189, 47.9240068], [13.5096529, 47.9238428], [13.5095553, 47.9235246], [13.5094456, 47.9231427], [13.5094474, 47.9227914], [13.5094788, 47.9224584], [13.5095292, 47.9219652], [13.5097537, 47.9219506], [13.5097084, 47.9216199], [13.5093322, 47.9209123], [13.5096937, 47.920914], [13.5102915, 47.920974], [13.5104154, 47.9202867], [13.5104809, 47.91984], [13.5105235, 47.9194201], [13.5102486, 47.9193847], [13.5101641, 47.9190153], [13.5103352, 47.9189536], [13.5105898, 47.9189707], [13.5108953, 47.9188873], [13.5111126, 47.9187776], [13.5119945, 47.9185747], [13.5119601, 47.9180174], [13.5119108, 47.9180138], [13.5118148, 47.9176478], [13.5114516, 47.9170054], [13.5116334, 47.916961], [13.5115613, 47.9168696], [13.5106394, 47.9170852], [13.5104144, 47.9165308], [13.5099512, 47.9165921], [13.5098174, 47.9158863], [13.5095762, 47.9154295], [13.5088983, 47.9155179], [13.508396, 47.915612], [13.5082112, 47.9156933], [13.5081789, 47.9155576], [13.5083586, 47.9154578], [13.5083098, 47.9153896], [13.5081785, 47.9153414], [13.5081259, 47.9151175], [13.508069, 47.9151082], [13.5080082, 47.9150051], [13.5078726, 47.9148904], [13.5077457, 47.9148232], [13.5075156, 47.9148213], [13.5073494, 47.914782], [13.507229, 47.914794], [13.5071584, 47.914681], [13.5068733, 47.9145344], [13.5068257, 47.9144354], [13.5065151, 47.9143122], [13.5063133, 47.9142878], [13.5061059, 47.9141692], [13.5058663, 47.9140132], [13.5058129, 47.9138877], [13.5053878, 47.9133582], [13.5046778, 47.9129768], [13.5046485, 47.912833], [13.5041617, 47.9126811], [13.5038651, 47.9125583], [13.5035065, 47.9123621], [13.5030213, 47.9121666], [13.5027456, 47.9120451], [13.503674, 47.9116611], [13.5043205, 47.9114011], [13.5049164, 47.9111205], [13.5049943, 47.9110674], [13.5050536, 47.9110503], [13.5053297, 47.9109097], [13.5055145, 47.9107879], [13.5054969, 47.9106673], [13.5056269, 47.9104455], [13.505842, 47.9101693], [13.5054955, 47.9101827], [13.505424, 47.9099506], [13.5051586, 47.9096298], [13.5049362, 47.9093812], [13.5047231, 47.90917], [13.5046926, 47.9091572], [13.5042885, 47.9087376], [13.5040614, 47.9084907], [13.5042037, 47.9084813], [13.5040018, 47.9083385], [13.5037528, 47.908178], [13.5035848, 47.9080912], [13.5034818, 47.9080332], [13.5031478, 47.9078089], [13.503027, 47.9076636], [13.502987, 47.9075168], [13.502953, 47.9071483], [13.5029092, 47.9071482], [13.5027, 47.9071714], [13.5026692, 47.9071781], [13.502474, 47.907199], [13.5020164, 47.9072617], [13.5016264, 47.9072389], [13.5012677, 47.9071662], [13.501201, 47.9071469], [13.5001955, 47.9067805], [13.5000529, 47.9067317], [13.4999422, 47.9067055], [13.4996867, 47.9066677], [13.498735, 47.9064557], [13.4981896, 47.9061924], [13.4977753, 47.9060696], [13.4977972, 47.9058806], [13.4977038, 47.905533], [13.4977465, 47.9052272], [13.4977964, 47.9049674], [13.4979443, 47.9048046], [13.4981151, 47.9045776], [13.4981148, 47.9045058], [13.498062, 47.9043509], [13.49807, 47.9043041], [13.498134, 47.9041424], [13.4982289, 47.9039915], [13.4984814, 47.9037199], [13.4984874, 47.9036383], [13.4985484, 47.9034536], [13.498556, 47.9030617], [13.4984315, 47.9027778], [13.498307, 47.9026129], [13.4981836, 47.9021051], [13.4980888, 47.9018536], [13.4982742, 47.9017356], [13.4983404, 47.9015656], [13.4983085, 47.9012011], [13.4984906, 47.9008875], [13.4985263, 47.9006556], [13.4985228, 47.9004564], [13.4983165, 47.9000135], [13.4982819, 47.8999629], [13.4981807, 47.8998148], [13.498057, 47.899542], [13.4980692, 47.8993675], [13.4981376, 47.8992252], [13.4978725, 47.8990859], [13.4976083, 47.8990527], [13.4973747, 47.8991057], [13.4972985, 47.8989224], [13.4971199, 47.8983879], [13.4968702, 47.8981367], [13.4969786, 47.8981176], [13.4970068, 47.8977177], [13.4966745, 47.8972154], [13.4962121, 47.89703], [13.4958485, 47.8967577], [13.4955168, 47.8964358], [13.4948952, 47.896099], [13.4942976, 47.8956084], [13.4939433, 47.8955], [13.4938324, 47.8953509], [13.493773, 47.8952555], [13.493523, 47.8950862], [13.4935213, 47.8949833], [13.4934004, 47.8948971], [13.4934841, 47.8947229], [13.4935557, 47.894441], [13.4934267, 47.8943098], [13.4935393, 47.8940441], [13.4933271, 47.8938457], [13.4930735, 47.893754], [13.4931235, 47.8936504], [13.4932406, 47.8934956], [13.493609, 47.8931946], [13.493722, 47.8929778], [13.4936637, 47.8927902], [13.4938309, 47.8925778], [13.4935476, 47.8923109], [13.4932598, 47.8920555], [13.4930475, 47.891812], [13.492858, 47.8916965]]]}}]}

response = requests.get(urlString) #pulls down what comes from the internet
if not data: #if there is no data to get data. but we have data variable
    if response.status_code == 200: #200 bc http:// has it set as everything is ok
    #then everything went well
        data = response.json()  #to print the raw data from the link, which is copied above
        #print(data)
    else:
        print("requests errored with code:", response.status_code)
        print(response.text)
else: 
    print("Usig cached data")
    
#now get the last part of the dict to draw the polygon of attersee

x = data['features']
y =x[0] #y is a dict


z = y['geometry']

a = z['coordinates']
coords = a[0]

crsHelper = HCrs()
crsHelper.from_srid(4326)
crsHelper.to_srid(3857)

attersee_ = HPolygon.fromCoords(coords)

attersee = crsHelper.transform(attersee_)

print(attersee)
canvas = HMapCanvas.new()



osm = HMap.get_osm_layer()
canvas.set_layers([osm])



canvas.set_extent(attersee.bbox())

canvas.add_geometry(attersee,"red",1)
canvas.show()
# y = x['geometry']
# print(y)
    
